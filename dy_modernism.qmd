---
title: "Digital Yoknapatawpha and Modernism"
subtitle: "Characters, Locations and Events in Digital Yoknapatawpha"
author: "Johannes Burgers"
editor: visual
date: "10/30/2022"
format:
  revealjs: 
    theme: simple
    incremental: true
    #width: 1680
    #height: 1050
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache.lazy = FALSE)

```

```{r load_chart_styling, echo=FALSE}
#Page styling

#This is where you create your own custom color palette for the traces.
faulkner_colorway = c("#132C53","#F27A18","#ae0700","#79b473","#38726c","#76bed0","#6b2d5c","#448b2d","#e6d812")

faulkner_colorway_highlight_1 = c(
  "rgba(19, 44, 83, 1)",
  "rgba(242, 122, 24,.1)",
  "rgba(174, 7, 0,.05)",
  "rgba(121, 180, 115,.1)",
  "rgba(56, 114, 108,.1)",
  "rgba(118, 190, 208,.1)"
)

faulkner_colorway_highlight_2 = c(
  "rgba(19, 44, 83, .1)",
  "rgba(242, 122, 24,1)",
  "rgba(174, 7, 0,.05)",
  "rgba(121, 180, 115,.1)",
  "rgba(56, 114, 108,.1)",
  "rgba(118, 190, 208,.1)"
)

faulkner_colorway_highlight_3 = c(
  "rgba(19, 44, 83, .1)",
  "rgba(242, 122, 24,.1)",
  "rgba(174, 7, 0,1)",
  "rgba(121, 180, 115,.1)",
  "rgba(56, 114, 108,.1)",
  "rgba(118, 190, 208,.1)")

faulkner_colorway_bw = c("#999999", "#777777",	"#555555", "#333333",	
"#111111")

#This controls the background color for the entire chart. Probably best left white.
faulkner_paperbackground = c('rgba(255,255,255,0)')

#This controls the background for the plot. Probably best left white.
faulkner_plotcolor = c('rgba(255,255,255,.3)')

#Margin 

m <- list(l = 50, r = 50, b = 50, t = 50, pad = 4)

m_large <- list(l = 100, r = 100, b = 100, t = 100, pad = 4)

#Caption Style

fig_caption <- "font-family: 'Playfair Display','Helvetica Neue',Helvetica,Arial,sans-serif; font-weight: normal; font-size:90%"

plot_font <- list(family = "'Playfair Display','Helvetica Neue',Helvetica,Arial,sans-serif",
  size = 14,
  color = '#363636')

plot_font_large <- list(family = "'Playfair Display','Helvetica Neue',Helvetica,Arial,sans-serif",
  size = 18,
  color = '#363636')
```

```{r load_libraries}
library(knitr)
library(shiny)
library(tidyverse)
library(plotly)
library(cooccur)
library(stats)
library(snakecase)
```

```{r load_data}
dy_events <- read_csv("data/full_database_2021_5_11.csv")

dy_events <-  dy_events %>% 
   mutate(reduced_race = ifelse(Race != "White" & Race != "Black" & Race != "Unknown", "Multiple Ancestries", Race)) %>% 
   mutate(reduced_race = ifelse(Race == "Indian", "Native American", reduced_race))
              

```

```{r load_spaces}
space <- read_csv("location_spaces.csv")
```

```{r get_location_data}
location_data <- read_csv("data/locations.csv")  
event_types <- read_csv("data/events.csv")
```

```{r set_location_types}
location_type <- location_data %>%
  mutate(LocationCode = paste(SourceTextCode, LocationKey, sep =
                                "")) %>%
  select(LocationCode, Type)
event_locations <- event_types %>%
  mutate(LocationCode = as.numeric(LocationCode)) %>%
  mutate(LocationCode = paste(SourceTextCode, LocationCode, sep =
                                "")) %>%
  select(c(Nid, LocationCode))

event_location_types <- event_locations %>%
  left_join(location_type) %>%
  rename(EventID = Nid)
```

```{r eval=FALSE}
location_export <- location_type %>% 
                    distinct(Type)

#write_csv(location_export, "location_export.csv")
```

# Navigation { .smaller}

This entire slide deck is available here:

https://bit.ly/digyok

<p align = "left">

<img src="images/bitly_digyok.png" alt="QR code" height="400px"/><a href="https://bit.ly/digyok"></a><br>

-   You can use the arrow keys to navigate (←) left and right (→) between sections
-   Press ESC to see all the slides

# Overview

-   Problems: Longevity & Interoperability
-   One Solution: DY data model
-   Examples
-   Modernism?

# DH Problems

-   Longevity: compared to print publications DH projects have an incredibly short life-cycle. They quickly become obsolete.

-   Interoperability: Despite various attempts, DH projects generally are not able to "talk to each other."

# DY Solutions

-   The underlying data model used by ***DY*** offers a robust, flexible solution that has been tested and refined for nearly a decade

-   It is corpus-agnostic, and can be modified to meet the needs of many research questions

# Why Care?

- Interoperability is a means of ensuring project longevity

- Data that can be recycled and re-purposed for other projects has a longer live cycle than data that is unique to a specific project


# Digital Yoknapatawpha: A Miniature of Man's Hopes and Disasters {.smaller}

-   There is no 'objective' way to turn literature into data
-   Years of vetting and peer-review have made the data consistent
-   Each piece of data creates new insights, but also raises more problems
-   I still catch data encoding mistakes
-   ...that I made
-   Sorry!
-   Humanities Data Science is an imperfect science

# Small Town / Big Data

- Project Overview: The ***Digital Yoknapatawpha*** Project is a "deep" atlas of William Faulkner's Yoknapatawpha fictions projected onto digital versions of his own maps. On its most basic level, it allows users to identify every character, place, and event in his works.

-   5011 Characters

-   2176 Locations

-   8520 Events

# Smart Data

-   This is not as large as "big data", but it far exceeds the capacity of a single person to apprehend.

-   This data can be used to complement, disrupt, irritate, and otherwise make us reconsider our assumptions about Faulkner and modernism more generally.

# Relationships

-   These data exist relationally

-   ***Characters*** appear at ***events*** (time), which happen at ***locations*** (space)

-   This represents a fundamental structure in narrative.

-   Using this structure we can do very sophisticated analyses of interactions between characters at different places over time

# Lighting example: Faulknerian Writing

-   What do we mean when we say "Faulknerian"?

-   Faulkner's narrative structure: temporal fragmentation, multiple forms of narration

- Faulkner switches time and speaker


# Event Data Attributes

- *Page Number*: The order of events as told (plot)

- *Chronological number*: The order of events as they occur in sequence (story)

- *Narrative status*: How an event is narrated


# Visualizing Plot Structure

 - [http://faulkner.iath.virginia.edu/narrativeanalysis.html](http://faulkner.iath.virginia.edu/narrativeanalysis.html)
 
 
# Dimensional Reduction

- Looking at the plot diagrams for 68 charts requires comprehending 204 variables simultaneously

- Non-linearity and switching of narrative voice can be combined to create one unified property called: ***narrative fluctuation***

- We can create an average ***narrative fluctuation*** per event per story

# Narrative and Faulkner

- Narrative fluctuation as a "Faulknerian" trait

```{r}

narrative_data <- dy_events %>% 
              select(c(SourceTextTitle:NarrativeStatus)) %>% 
  group_by(SourceTextTitle) %>% 
              rename_with(~ to_any_case(.x, "snake")) %>%  
              arrange(chronological_order, .by_group = TRUE) %>% distinct(chronological_order, .keep_all = TRUE) %>% 
              mutate(chronology = row_number())
              

```

```{r}
narrative_fluctuation <- narrative_data %>%
  group_by(source_text_title) %>%
  arrange(order_within_page, .by_group = TRUE)  %>%
  mutate(fluctuation = ifelse(chronology - lag(chronology, default = 0) !=
                                1, 1, 0)) %>%
  
  mutate(status_fluctuation = if_else(
    narrative_status != lag(narrative_status, default = NA),
    1,
    0
  )) %>% 
  
  mutate(total_fluctuation = fluctuation+ifelse(is.na(status_fluctuation),0,status_fluctuation)) 
```

```{r}
fluctuation_total <-  narrative_fluctuation %>% 
                  summarise(flux = sum(total_fluctuation)/n()) %>% 
  mutate(canonical = ifelse (str_detect(source_text_title,"Sound|Light|Dying|Absalom"), "Canonical", "Non-Canonical")) 
  
```

```{r}
fluctuation_total_plot <- plot_ly(
  fluctuation_total,
  x = ~ reorder(source_text_title, flux),
  y = ~ flux,
  name = ~ canonical,
  type = "bar",
  opacity = .9,
  colors = faulkner_colorway[1],
  hovertemplate = paste('Title: %{x}<br>Flux: %{y}<extra></extra>')
) 

fluctuation_total_plot <- fluctuation_total_plot %>%   layout(
  yaxis = list(title = "Fluctuations per Event"),
    xaxis = list(title = "Text Title"),
    title = list(text = "Narrative Fluctuation across Faulkner (n = 68)"),
    colorway = faulkner_colorway,
    font = plot_font,
    margin = m_large,
    paper_bgcolor = faulkner_paperbackground,
    plot_bgcolor = faulkner_plotcolor,
     modebar = list(bgcolor= faulkner_paperbackground)
       )
  
fluctuation_total_plot
```



# Extending beyond DY: Faulkner and the Market Place

- Faulkner wrote for multiple audiences
- Sometimes he was trying to sell stories
- Is there a relationship between complexity and saleability?


# Faulkner and Circulation

- [Circulating American Magazines project](https://sites.lib.jmu.edu/circulating/)

- Circulation figures for around 250 magazines

- Annotated and freely available!

- See Brooks Hefner

# Circulation {.smaller}

 - Complexity should go down as circulation goes up

```{r}
publication_data <- read_csv("Publication chart with circulation.csv")
```

```{r}
publication_data_clean <- publication_data %>%
  mutate(source_text_title = dQuote(Title, q = FALSE)) %>%
  select(Date, Magazine, Circulation, source_text_title) %>%
  drop_na(Circulation)
```


```{r}
circulation_fluctuation <- fluctuation_total %>%
  inner_join(publication_data_clean)
```


```{r}
circulation_plot <- circulation_fluctuation %>%
  plot_ly(x = ~ Circulation,
          y = ~ flux,
          name = ~ Magazine,
          type='scatter',
                    mode = 'markers',
                  hoverinfo = 'text',
                    text = ~ paste('Text:', source_text_title, '<br> Circulation: ',Circulation )) %>% 
        
          layout(
            yaxis = list(title = "Fluctuations per Event"),
    xaxis = list(title = "Circulation in Millions"),
    title = list(text = "Narrative Fluctuation and Circulation (n = 25)"),
            colorway = faulkner_colorway,
    font = plot_font,
    margin = m_large,
    paper_bgcolor = faulkner_paperbackground,
    plot_bgcolor = faulkner_plotcolor,
     modebar = list(bgcolor= faulkner_paperbackground)
              )

circulation_plot
```

# Publication Date {.smaller}

- Faulkner wrote more complex texts at the beginning of his career


```{r}
circulation_time <- circulation_fluctuation %>% 
                    plot_ly(
                    x = ~Date,
                    y= ~flux,
                    name = ~Magazine,
                    size= ~Circulation,
                    type='scatter',
                    mode = 'markers',
                  hoverinfo = 'text',
                    text = ~ paste('Text:', source_text_title, '<br> Circulation: ',Circulation ),
    marker = list(
      sizemode = 'diameter',
      sizeref = 1.5,
      opacity = .7,
      line = list(width = 1, color = 'white')
    )) %>% 
  layout(
    title = "Date of Publication and Narrative Fluctuation (n = 25)",
    xaxis = list(title = "Date"),
    yaxis = list(title = "Average Fluctuation per Event"),
    colorway = faulkner_colorway,
    font = plot_font,
    margin = m_large,
    paper_bgcolor = faulkner_paperbackground,
    plot_bgcolor = faulkner_plotcolor,
     modebar = list(bgcolor= faulkner_paperbackground)
     )
                      
circulation_time


```

# Great, but...

- Can you do this with literally any other author than Faulkner?


# Yes, sort of...

- South Asian Partition Fiction Database

- 27 Stories

- 1026 Events

- 315 Locations

- 536 Characters

# Narrative Complexity and Partition

- This is a very hetergenous corpus of "experimental" and linear narrative

- Canonical works by Saadat Hassan Manto, Intizar Husain, and Mohinder Singh Sarna, but also lesser known works.


```{r}
partition_db <- read_csv("data/partition_db_geo.csv")
```


```{r}
partition_chrono <- partition_db %>%
  distinct(event_id, .keep_all = TRUE) %>%
  select(event_id:chronology, title_of_chapter:gender_author)  %>%
  mutate(order_within_page = start_page_event + (page_event_number /
                                                   100)) %>%
  group_by(title_of_chapter) %>%
  arrange(chronology, .by_group = TRUE) %>%
  mutate(chrono_order = row_number()) %>%
  arrange(order_within_page, .by_group = TRUE) 
```

# Narrative Complexity Chart

```{r}
partition_fluctuation <- partition_chrono %>%
  group_by(title_of_chapter) %>%
  arrange(order_within_page, .by_group = TRUE)  %>%
  mutate(fluctuation = ifelse(chrono_order - lag(chrono_order, default = 0) !=
                                1, 1, 0)) %>%
  mutate(status_fluctuation = if_else(narrative_status != lag(narrative_status, default = NA),
                                      1,
                                      0)) %>%
  mutate(total_fluctuation = fluctuation + ifelse(is.na(status_fluctuation), 0, status_fluctuation)) 


```

```{r}
partition_fluctuation_total <-  partition_fluctuation %>%
  summarise(
    gender = gender_author,
    last_name = family_name_author,
    first_name = given_name_s,
    flux = sum(total_fluctuation) /
      n()
  ) %>%
  
  distinct(title_of_chapter, .keep_all = TRUE) %>%
  mutate(gender = ifelse(title_of_chapter == "Lajwanti", "Male", gender))
```

```{r}
partition_total_plot <- plot_ly(
  partition_fluctuation_total,
  x = ~ reorder(title_of_chapter, flux),
  y = ~ flux,
  name = ~ gender,
  type = "bar",
  opacity = .9,
  colors = faulkner_colorway[1],
  hoverinfo = 'text',
  text = ~ paste('Text: ', title_of_chapter, '<br> Author: ',last_name, ", ",first_name, sep="" ),
  textposition = 'none'
) 

partition_total_plot <- partition_total_plot %>%   layout(
  yaxis = list(title = "Fluctuations per Event"),
    xaxis = list(title = "Text Title"),
    title = list(text = "Narrative Fluctuation across Partition Texts (n = 28)"),
  colorway = faulkner_colorway,
    font = plot_font,
    margin = m_large,
    paper_bgcolor = faulkner_paperbackground,
    plot_bgcolor = faulkner_plotcolor,
     modebar = list(bgcolor= faulkner_paperbackground)
    
  )
  
partition_total_plot


```

# Corpus Comparison

```{r}
all_fluctuations <- fluctuation_total %>%
  select(source_text_title, flux) %>%
  filter(str_detect(source_text_title, "\"")) %>%
  mutate(gender = "Faulkner",
         last_name = "Faulkner",
         first_name = "William") %>%
  rename(title_of_chapter = source_text_title) %>% 
  relocate(flux, .after = last_col()) %>% 
  add_row(partition_fluctuation_total)
        
  
```


```{r}
box_plots <- all_fluctuations %>% 
          plot_ly(y = ~flux, 
                  type = "box", 
                  name = ~gender,
                  quartilemethod="linear") %>% 
                  layout(
    title = "Narrative Fluctuation by Corpus",
    xaxis = list(title = "Corpus"),
    yaxis = list(title = "Fluctuation per Event"),
    colorway = faulkner_colorway,
    font = plot_font,
    margin = m_large,
    paper_bgcolor = faulkner_paperbackground,
    plot_bgcolor = faulkner_plotcolor,
     modebar = list(bgcolor= faulkner_paperbackground)
     )
                  

box_plots
```

# Explanations

- The data is wrong

- Narrative fluctuation is not properly defined

- Modernism and Partition literature are not the same thing

# Conclusion

- These are conversation that would be very hard to have without the collection of this data.



# Thank you for your patience!

Follow us!

<p align="left">

<img src="images/twitter.png" alt="twitter" height="42px"/><a href="https://twitter.com/DigYok">\@DigYok</a><br> <img src="images/instagram.png" alt="instagram" height="42px"/> <a href="https://www.instagram.com/digyok/">digyok</a><br> <img src="images/facebook.png" alt="facebook" height="42px"/> <a href="https://www.facebook.com/digyok">Digital Yoknapatawpha</a><br> <img src="images/internet.png" alt="internet" height="42px"/> <a href="http://faulkner.iath.virginia.edu/">http://faulkner.iath.virginia.edu</a><br> <img src="images/animated-email.gif" alt="internet" height="42px"/> <a href="mailto:burgerjh@jmu.edu">burgerjh\@jmu.edu</a><br>

</p>
